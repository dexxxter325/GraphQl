#используется для генерации кода на стороне сервера и клиента
type Car {
  id: ID!
  user: User!
  brand: String!
  model: String!
  year: Int!
  price: Float!
  mileage: Int!
  description: String!
}
input CarInput {
  userId:ID!
  brand: String!
  model: String!
  year: Int!
  price: Float!
  mileage: Int!
  description: String!
}
type User{
  id: ID!
  name: String!
  username: String!
  password: String!
}

input RegisterInput{
  name:String!
  username:String!
  password:String!
}

type Login{
  sessionID:String!
}

input LoginInput{
  username:String!
  password:String!
}

type Mutation{
  register(input:RegisterInput!):User!
  login(input:LoginInput!):Login!#ID-session`s id
  logout(id: ID!): Boolean!
  addCar(input: CarInput!): Car!
  updateCar(id: ID!, input: CarInput!): Car!
  deleteCar(id: ID!): Boolean
}

type Query{
  getAllCars: [Car!]!
  getCarById(id: ID!): Car!
  getUserByID(userID: ID!): User!
}

type Subscription{
  carPublished:Car!
}